{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,SACrBD,SAASC,cAAc,UACxBD,SAASC,cAAc,SACtBD,SAASC,cAAc,UAqBxC,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAItC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACJI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAEzBA,EAAM,G,CA/BZL,EAAOa,iBAAiB,UAExB,SAA4BC,GAC1BA,EAAEC,iBACF,MAAMV,GAASS,EAAEE,OAAOC,SAASZ,MAAMa,MACjCC,GAAUL,EAAEE,OAAOC,SAASE,OAAOD,MACnCE,GAAQN,EAAEE,OAAOC,SAASG,KAAKF,MACrC,IAAKG,EAAI,EAAGA,EAAIF,EAAQE,IAExBlB,EAAckB,EAAE,EAAGhB,EAAQe,EAAOC,GAC/BC,MAAKC,GAAQC,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBH,EAAKnB,eAAemB,EAAKlB,YACnFsB,OAAMJ,GAAQC,EAAA1B,GAAS2B,OAAOG,QAAQ,oBAAoBL,EAAKnB,eAAemB,EAAKlB,W","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from \"notiflix\";\n\n\nconst formEl = document.querySelector(\".form\")\nconst buttonEl = document.querySelector(\"button\")\nconst delayEl = document.querySelector(\"delay\")\nconst amountEl = document.querySelector(\"amount\")\n\n\nformEl.addEventListener(\"submit\", startCreatePromise)\n\nfunction startCreatePromise(e) {\n  e.preventDefault()\n  const delay = +e.target.elements.delay.value\n  const amount = +e.target.elements.amount.value\n  const step = +e.target.elements.step.value\n  for (i = 0; i < amount; i++){\n    \n  createPromise(i+1, delay + step * i)\n    .then(data => Notiflix.Notify.success(`Fulfilled promise ${data.position} in ${data.delay} `))\n    .catch(data => Notiflix.Notify.failure(`Rejected promise ${data.position} in ${data.delay} `))\n    // delay+=step\n\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n\n\n     \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve({position, delay})\n    } else {\n      reject({position, delay})\n    }\n    },delay)\n    \n    \n\n  })\n    }\n    "],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","target","elements","value","amount","step","i","then","data","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5b70cf25.js.map"}